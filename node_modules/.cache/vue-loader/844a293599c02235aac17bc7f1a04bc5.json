{"remainingRequest":"/Users/demetraefraimidou/Desktop/WDKA/Year 3/digital/wikipedia/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/demetraefraimidou/Desktop/WDKA/Year 3/digital/wikipedia/src/views/Article.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/demetraefraimidou/Desktop/WDKA/Year 3/digital/wikipedia/src/views/Article.vue","mtime":1607283599778},{"path":"/Users/demetraefraimidou/Desktop/WDKA/Year 3/digital/wikipedia/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/demetraefraimidou/Desktop/WDKA/Year 3/digital/wikipedia/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/demetraefraimidou/Desktop/WDKA/Year 3/digital/wikipedia/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/demetraefraimidou/Desktop/WDKA/Year 3/digital/wikipedia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/demetraefraimidou/Desktop/WDKA/Year 3/digital/wikipedia/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PUluY29uc29sYXRhOndnaHRAMzAwJmRpc3BsYXk9c3dhcCcpOwouY29udGVudCB7CiAgbWFyZ2luLXRvcDogMTVweDsKICBmb250LXdlaWdodDogYm9sZDsKICBmb250LWZhbWlseTogJ0luY29uc29sYXRhJywgbW9ub3NwYWNlOwoKICBtYXJnaW4tbGVmdDogNSU7CiAgbWFyZ2luLXJpZ2h0OiA1JTsKfQoK"},{"version":3,"sources":["Article.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Article.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"content\">\n    <div>\n      <h1>{{ article.title }}</h1>\n    </div>\n    <img v-if=\"article.images.length > 0\" :src=\"getContent(article.images[0].image)\" width=\"30%\">\n    <div v-for=\"paragraph in paragraphs\" :key=\"paragraph\">\n      <div v-if=\"paragraph.length=== 1\">\n        <h3>{{ paragraph }}</h3>\n        <div v-if=\"article.images.length > 0\">\n          <a :href=\"article.images[getIndex(paragraph)].link\" target=\"_blank\">\n            <img :src=\"getContent(article.images[getIndex(paragraph)].image)\" width=\"30%\">\n          </a>\n        </div>\n      </div>\n      <p v-if=\"paragraph.length > 1 && !isPdf(paragraph)\">{{ paragraph }} </p>\n      <div v-if=\"isPdf(paragraph)\">\n        <embed :src=\"getContent(paragraph)\" type=\"application/pdf\"   height=\"700px\" width=\"500\">\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n  import articles from '../assets/article.json'\n\n  export default {\n    name: 'Article',\n    props: ['id'],\n    data() {\n      return {\n        articles,\n        article: {},\n        paragraphs: []\n      }\n    },\n    beforeMount: function() {\n      this.article = this.articles[this.id]\n      this.paragraphs = this.articles[this.id].contents\n    },\n    methods: {\n      getContent(path) {\n        return require('../assets/' + path);\n      },\n      getIndex(text) {\n        switch (text) {\n          case \"A\":\n            return 1;\n          case \"B\":\n            return 2;\n          case \"C\":\n            return 3;\n        }\n      },\n      isPdf(path) {\n        if (path.endsWith(\".pdf\")) {\n          return true;\n        }\n        return false;\n      }\n    }\n  }\n</script>\n\n<style>\n@import url('https://fonts.googleapis.com/css2?family=Inconsolata:wght@300&display=swap');\n.content {\n  margin-top: 15px;\n  font-weight: bold;\n  font-family: 'Inconsolata', monospace;\n\n  margin-left: 5%;\n  margin-right: 5%;\n}\n\n</style>\n"]}]}